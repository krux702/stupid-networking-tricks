#!/usr/bin/perl

# Generates a config based on a template

# Template file
($variable_file, $template_file) = @ARGV;

if(!$variable_file || !$template_file)
{
  print "Generates a config based on a template

SYNTAX:

./gen-config <variable_file> <template_file>

";

  exit;
}


# Prompt               Variable             Default
# Management IP:       %FW_MGMT_IP%         10.89.201.40

%prompts = ();
%vars = ();

# first pass read variables file to collect variable definitions
open(INFILE,"<$variable_file") or die ("Unable to open $variable_file\n");
while(<INFILE>)
{
  $data = $_;

  if( $data =~ m/^# Note:(.*)$/ )
  {
    $note = $1;
    $note =~ s/^\s+//;
    $note =~ s/\s+$//;
    print "$note\n";
  }
  if( $data =~ m/^#(\s+|)([^%]+)(%[^%]+%)\s+(.*)$/ )
  {
    if($note)
    {
      print "\n_________________________________________________\n\n";
      print "Please enter value for configuration variables.\nPress [ENTER] to accept default value.\n\n";
      $note = "";
    }
    $var_name = $3;
    $prompts{$3} = $2;
    $vars{$3} = $4;

    print "$prompts{$var_name} [$vars{$var_name}]: ";
    $input = <STDIN>;
    chomp $input;
    if($input)
    {
      $vars{$var_name} = $input;
    }
  }
}
close(INFILE);


print "\n###\n\n";

# second pass read template file, modify based on variable definitions, and output
open(INFILE,"<$template_file") or die ("Unable to open $template_file\n");
while(<INFILE>)
{
  $data = $_;
  if($data =~ /^#/)
  {
    # comment, do nothing
  }
  else
  {
    for $var_name (keys %vars)
    {
      $data =~ s/$var_name/$vars{$var_name}/g;
    }
    print $data;
  }
}
close(INFILE);
